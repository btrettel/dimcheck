[f90lint]
directories              = app src test
skip_indexing            = src/debug.f90 src/release.f90 src/revision.f90 src/units.f90 src/units_ad.f90
ignore_assertion_density = 
ignore_test_sloc_ratio   = src/cli.f90 src/genunits_io.f90 src/timer.f90

[depends]
directories = app src test

# The `build` module isn't stored in build.f90 as depends.py expects, so it is skipped here.
# The `units` module is autogenerated and consequently won't necessarily be present.
no_existence_check = build revision units

# The `build` module (debug.f90 or release.f90, depending on the value of the `BUILD` make macro) disables assertions. Because this violates this program's assumption that the filename matches that of the module name (`build` is not the same as `debug` or `release`), I had to add some logic to this program to handle this case. Part of that includes ignoring the following files and manually adding a file with the filename `$(BUILD)` later.
module_name_mismatch = src/debug.f90 src/release.f90

# The following are not always present, so they should not be indexed.
skip_indexing = src/revision.f90

# Output files
depends_file = mk/depends.mk
before_file  = mk/before.mk

allsrc = test/genunits_input.nml test/genunits_input_ad.nml
# `not_allsrc` is needed for automatically generated files as they will cause circular dependencies when listed as `ALLSRC` in the Makefiles.
not_allsrc = src/units.f90 src/units_ad.f90
